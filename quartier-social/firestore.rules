rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ===== USERS =====
    match /users/{userId} {
      // L'utilisateur peut lire et écrire ses propres données
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // L'admin peut lire et écrire toutes les données utilisateur
      allow read, write: if request.auth != null && 
        request.auth.token.email == 'admin@quartier-social.com';
      
      // Permettre à tous les utilisateurs authentifiés de lire le document de l'admin (pour les paramètres système)
      allow read: if request.auth != null && 
        resource.data.email == 'admin@quartier-social.com';
    }

    // ===== POSTS =====
    match /posts/{postId} {
      // Lecture : tous les utilisateurs authentifiés
      allow read: if request.auth != null;
      
      // Création : l'utilisateur doit être l'auteur
      allow create: if request.auth != null && 
        request.resource.data.authorId == request.auth.uid;
      
      // Modification des likes et commentaires : tous les utilisateurs authentifiés
      allow update: if request.auth != null && 
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'likesCount', 'commentsCount']));
      
      // Modification/Suppression : seulement l'auteur (pour les autres champs)
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.authorId;
      
      // Admin : tous les droits
      allow read, write: if request.auth != null && 
        request.auth.token.email == 'admin@quartier-social.com';

      // ===== LIKES SUR POSTS =====
      match /likes/{likeId} {
        // Lecture : tous les utilisateurs authentifiés
        allow read: if request.auth != null;
        
        // Création : l'utilisateur doit être le propriétaire du like
        allow create: if request.auth != null && 
          request.resource.data.userId == request.auth.uid;
        
        // Suppression : seulement le propriétaire du like
        allow delete: if request.auth != null && 
          resource.data.userId == request.auth.uid;
        
        // Admin : tous les droits
        allow read, write: if request.auth != null && 
          request.auth.token.email == 'admin@quartier-social.com';
      }

      // ===== COMMENTAIRES SUR POSTS =====
      match /comments/{commentId} {
        // Lecture : tous les utilisateurs authentifiés
        allow read: if request.auth != null;
        
        // Création : l'utilisateur doit être l'auteur (pas de restriction sur la cible)
        allow create: if request.auth != null && 
          request.resource.data.authorId == request.auth.uid;
        
        // Modification/Suppression : seulement l'auteur
        allow update, delete: if request.auth != null && 
          request.auth.uid == resource.data.authorId;
        
        // Admin : tous les droits
        allow read, write: if request.auth != null && 
          request.auth.token.email == 'admin@quartier-social.com';

        // ===== LIKES SUR COMMENTAIRES =====
        match /likes/{likeId} {
          // Lecture : tous les utilisateurs authentifiés
          allow read: if request.auth != null;
          
          // Création : l'utilisateur doit être le propriétaire du like
          allow create: if request.auth != null && 
            request.resource.data.userId == request.auth.uid;
          
          // Suppression : seulement le propriétaire du like
          allow delete: if request.auth != null && 
            resource.data.userId == request.auth.uid;
          
          // Admin : tous les droits
          allow read, write: if request.auth != null && 
            request.auth.token.email == 'admin@quartier-social.com';
        }

        // ===== RÉPONSES AUX COMMENTAIRES =====
        match /replies/{replyId} {
          // Lecture : tous les utilisateurs authentifiés
          allow read: if request.auth != null;
          
          // Création : l'utilisateur doit être l'auteur (pas de restriction sur la cible)
          allow create: if request.auth != null && 
            request.resource.data.authorId == request.auth.uid;
          
          // Modification/Suppression : seulement l'auteur
          allow update, delete: if request.auth != null && 
            request.auth.uid == resource.data.authorId;
          
          // Admin : tous les droits
          allow read, write: if request.auth != null && 
            request.auth.token.email == 'admin@quartier-social.com';

          // ===== LIKES SUR RÉPONSES =====
          match /likes/{likeId} {
            // Lecture : tous les utilisateurs authentifiés
            allow read: if request.auth != null;
            
            // Création : l'utilisateur doit être le propriétaire du like
            allow create: if request.auth != null && 
              request.resource.data.userId == request.auth.uid;
            
            // Suppression : seulement le propriétaire du like
            allow delete: if request.auth != null && 
              resource.data.userId == request.auth.uid;
            
            // Admin : tous les droits
            allow read, write: if request.auth != null && 
              request.auth.token.email == 'admin@quartier-social.com';
          }
        }
      }
    }

    // ===== SUPPORT POUR STRUCTURES NON IMBRIQUÉES (au cas où) =====
    
    // ===== COMMENTAIRES AU ROOT =====
    match /comments/{commentId} {
      // Lecture : tous les utilisateurs authentifiés
      allow read: if request.auth != null;
      
      // Création : l'utilisateur doit être l'auteur
      allow create: if request.auth != null && 
        request.resource.data.authorId == request.auth.uid;
      
      // Modification/Suppression : seulement l'auteur
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.authorId;
      
      // Admin : tous les droits
      allow read, write: if request.auth != null && 
        request.auth.token.email == 'admin@quartier-social.com';
    }

    // ===== RÉPONSES AU ROOT =====
    match /replies/{replyId} {
      // Lecture : tous les utilisateurs authentifiés
      allow read: if request.auth != null;
      
      // Création : l'utilisateur doit être l'auteur
      allow create: if request.auth != null && 
        request.resource.data.authorId == request.auth.uid;
      
      // Modification/Suppression : seulement l'auteur
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.authorId;
      
      // Admin : tous les droits
      allow read, write: if request.auth != null && 
        request.auth.token.email == 'admin@quartier-social.com';
    }

    // ===== LIKES AU ROOT =====
    match /likes/{likeId} {
      // Lecture : tous les utilisateurs authentifiés
      allow read: if request.auth != null;
      
      // Création : l'utilisateur doit être le propriétaire du like
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      
      // Suppression : seulement le propriétaire du like
      allow delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Admin : tous les droits
      allow read, write: if request.auth != null && 
        request.auth.token.email == 'admin@quartier-social.com';
    }

    // ===== ALERTES =====
    match /alerts/{alertId} {
      // Lecture : tous les utilisateurs authentifiés
      allow read: if request.auth != null;
      
      // Création : l'utilisateur doit être l'auteur
      allow create: if request.auth != null && 
        request.resource.data.authorId == request.auth.uid;
      
      // Modification/Suppression : seulement l'auteur
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.authorId;
      
      // Admin : tous les droits
      allow read, write: if request.auth != null && 
        request.auth.token.email == 'admin@quartier-social.com';
    }

    // ===== SIGNALEMENTS =====
    match /reports/{reportId} {
      // Création : l'utilisateur doit être le rapporteur
      allow create: if request.auth != null && 
        request.resource.data.reporterId == request.auth.uid;
      
      // Lecture : tous les utilisateurs authentifiés peuvent lire les signalements
      allow read: if request.auth != null;
      
      // Modification/Suppression : seulement le rapporteur
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.reporterId;
      
      // Admin : tous les droits
      allow read, write: if request.auth != null && 
        request.auth.token.email == 'admin@quartier-social.com';
    }

    // ===== PARAMÈTRES SYSTÈME =====
    match /system/{document} {
      // Lecture : tous les utilisateurs authentifiés peuvent lire les paramètres système
      allow read: if request.auth != null;
      
      // Écriture : seulement l'admin peut modifier les paramètres système
      allow write: if request.auth != null && 
        request.auth.token.email == 'admin@quartier-social.com';
    }

    // ===== LOGS DE SUPPRESSION =====
    match /deletionLogs/{logId} {
      // Création : tous les utilisateurs authentifiés peuvent créer des logs de suppression
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      
      // Lecture : seulement l'admin peut lire les logs de suppression
      allow read: if request.auth != null && 
        request.auth.token.email == 'admin@quartier-social.com';
      
      // Modification/Suppression : seulement l'admin
      allow update, delete: if request.auth != null && 
        request.auth.token.email == 'admin@quartier-social.com';
    }
  }
}
